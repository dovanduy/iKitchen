@using Microsoft.Owin.Security
@model ExternalLoginViewModel


<script src="https://apis.google.com/js/platform.js" async defer></script>
<meta name="google-signin-client_id" content="318652291951-r3obrs7aq7mifjp2rd6ajvm4uu5ur0db.apps.googleusercontent.com">
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() > 0)
    {
        string action = Model.Action;
        string returnUrl = Model.ReturnUrl;
        using (Html.BeginForm(action, "Account", new { ReturnUrl = returnUrl }))
        {
            <ul class="social-icons text-center">
                @Html.AntiForgeryToken()

                @foreach (AuthenticationDescription p in loginProviders)
                {
                    <li>
                        <a class="rounded-x social_@p.AuthenticationType.ToLower()" data-original-title="@p.AuthenticationType" href="#" title="Log in using your @p.Caption account" onclick="$(this).next().click();"></a>
                        <button type="submit" class="hidden" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" >@p.AuthenticationType</button>
                    </li>
                }

                <li><a class="rounded-x social_googleplus" data-original-title="Google Plus" href="#" id="google_signin" onclick="gapi.auth2.getAuthInstance().signIn()" data-onsuccess="onSignIn" type="submit"></a></li>
                <li><a class="rounded-x social_linkedin" data-original-title="Linkedin" href="#"></a></li>
            </ul>
            <input type="hidden" class="g-signin2" data-onsuccess="onSignIn" />
        }
    }
}
