@model PagedList<iKitchen.Linq.Event>
@{
    ViewBag.Title = "Events";
}
<!--=== Content Part ===-->
<div class="container content">

    <div class="row">
        @for (int i = 0; i < Model.Count; i++)
        {
            var item = Model[i];
            var user = CacheHelperApplicationUser.GetById(item.UserId);
            var eventUser = CacheHelper<EventUser>.GetAll().FirstOrDefault(c => c.UserId == User.Identity.GetUserId() && c.EventId == item.Id);
            var isFull = CacheHelper<EventUser>.GetAll().Count(c => c.EventId == item.Id) >= item.GuestLimitCount;
            <div class="col-sm-4">
                <div class="easy-block-v1">
                    
                    @PopulateMainImage(item)
                    @if(!isFull)
                    { 
                    <div class="easy-block-v1-badge rgba-default">Available</div>
                    }
                </div>
                <div class="projects">
                    <h2 title="@item.Summary"><a href="/Event/Detail/@item.Id">@item.Title</a></h2>
                    <ul class="list-unstyled list-inline blog-info-v2">
                        <li>Hosted By <a class="color-green" href="#">@user.Nickname</a></li>
                        @if(item.EventTime.HasValue)
                        { 
                        <li><i class="fa fa-clock-o"></i> @item.EventTime.Value.ToString("dd/MM/yyyy hh:mm tt")</li>
                        }
                    </ul>
                    @Html.Partial("_GuestInfo", item)
                </div>
                <div class="project-share">
                    <ul class="list-inline comment-list-v2 pull-left">
                        <li><i class="fa fa-eye"></i> <a href="#">25</a></li>
                        <li><i class="fa fa-comments"></i> <a href="#">32</a></li>
                        <li><i class="fa fa-retweet"></i> <a href="#">77</a></li>
                    </ul>
                    <ul class="list-inline star-vote pull-right">
                        <li><i class="color-green fa fa-star"></i></li>
                        <li><i class="color-green fa fa-star"></i></li>
                        <li><i class="color-green fa fa-star"></i></li>
                        <li><i class="color-green fa fa-star-half-o"></i></li>
                        <li><i class="color-green fa fa-star-o"></i></li>
                    </ul>
                </div>

                <div class="panel-heading-v2 overflow-h margin-bottom-20">
                    @if (!User.Identity.IsAuthenticated)
                    {
                        <a href="/Account/Login/?returnurl=@Request.RawUrl" title="please sign in to join" class="btn-u btn-u-green btn-block margin-bottom-10">Join Now</a>
                    }
                    else if (@item.UserId == User.Identity.GetUserId())
                    {
                        <a href="/Event/Edit/@item.Id" class="btn btn-info btn-block"><i class="fa fa-edit"></i> Edit this event</a>
                    }
                    else if (eventUser != null)
                    {
                        if (eventUser.IsPaid)
                        {
                            <a href="/Event/Detail/@item.Id" class="btn btn-info btn-block" title="View detail">Already joined</a>
                        }
                        else
                        {
                            <a href="/Event/Detail/@item.Id" class="btn-u btn-block">Pending payment</a>
                        }
                    }
                    else
                    {
                    <a href="#" data-href="/Event/Join/@item.Id" data-toggle="modal" data-target="#confirm"
                       data-confirm-message='Are you sure you want to join Event "@item.Title"?' data-confirm-title="Confirm join"
                       class="@(isFull ? "btn btn-grey disabled" : "btn-u btn-u-green") btn-block">@(isFull ? "No Vacancy" : "Join Now")</a>
                    }
                </div>
            </div>
        }

    </div><!--/end row-->

</div><!--/container-->
@Html.Partial("_Confirm")
<!--=== End Content Part ===-->
@helper PopulateMainImage(Event @event)
{
    var eventImage = CacheHelper<EventImage>.GetAll().Where(c => c.EventId == @event.Id).FirstOrDefault();
    string image = null;
    if (eventImage != null)
    {
        image = "/Images/Upload/360x270/" + eventImage.ImagePath;
    }
    else
    {
        image = "/assets/img/no_image.gif";
    }
    <a href="/Event/Detail/@(@event.Id)" title="@(@event.Summary)"><img src="@image" onerror="this.onerror = null;this.src = '/assets/img/no_image.gif';" /></a>
}
