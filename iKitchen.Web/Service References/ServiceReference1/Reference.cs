//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iKitchen.Web.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyInfo", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class PropertyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int CityIdField;
        
        private int DistrictIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        private int FloorNumField;
        
        private int TotalFloorNumField;
        
        private int RoomCountField;
        
        private int ParlourCountField;
        
        private int ToiletCountField;
        
        private int BalconyCountField;
        
        private double HouseAreaField;
        
        private int YearOfBuildingField;
        
        private int FitmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FitmentTypeOtherField;
        
        private double PriceField;
        
        private int UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private int StateField;
        
        private System.DateTime CreateOnField;
        
        private System.DateTime UpdateOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YewuUserIdField;
        
        private int TenementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenementNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int DistrictId {
            get {
                return this.DistrictIdField;
            }
            set {
                if ((this.DistrictIdField.Equals(value) != true)) {
                    this.DistrictIdField = value;
                    this.RaisePropertyChanged("DistrictId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ZoneName {
            get {
                return this.ZoneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneNameField, value) != true)) {
                    this.ZoneNameField = value;
                    this.RaisePropertyChanged("ZoneName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int FloorNum {
            get {
                return this.FloorNumField;
            }
            set {
                if ((this.FloorNumField.Equals(value) != true)) {
                    this.FloorNumField = value;
                    this.RaisePropertyChanged("FloorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int TotalFloorNum {
            get {
                return this.TotalFloorNumField;
            }
            set {
                if ((this.TotalFloorNumField.Equals(value) != true)) {
                    this.TotalFloorNumField = value;
                    this.RaisePropertyChanged("TotalFloorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int RoomCount {
            get {
                return this.RoomCountField;
            }
            set {
                if ((this.RoomCountField.Equals(value) != true)) {
                    this.RoomCountField = value;
                    this.RaisePropertyChanged("RoomCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public int ParlourCount {
            get {
                return this.ParlourCountField;
            }
            set {
                if ((this.ParlourCountField.Equals(value) != true)) {
                    this.ParlourCountField = value;
                    this.RaisePropertyChanged("ParlourCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public int ToiletCount {
            get {
                return this.ToiletCountField;
            }
            set {
                if ((this.ToiletCountField.Equals(value) != true)) {
                    this.ToiletCountField = value;
                    this.RaisePropertyChanged("ToiletCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public int BalconyCount {
            get {
                return this.BalconyCountField;
            }
            set {
                if ((this.BalconyCountField.Equals(value) != true)) {
                    this.BalconyCountField = value;
                    this.RaisePropertyChanged("BalconyCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public double HouseArea {
            get {
                return this.HouseAreaField;
            }
            set {
                if ((this.HouseAreaField.Equals(value) != true)) {
                    this.HouseAreaField = value;
                    this.RaisePropertyChanged("HouseArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public int YearOfBuilding {
            get {
                return this.YearOfBuildingField;
            }
            set {
                if ((this.YearOfBuildingField.Equals(value) != true)) {
                    this.YearOfBuildingField = value;
                    this.RaisePropertyChanged("YearOfBuilding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public int FitmentType {
            get {
                return this.FitmentTypeField;
            }
            set {
                if ((this.FitmentTypeField.Equals(value) != true)) {
                    this.FitmentTypeField = value;
                    this.RaisePropertyChanged("FitmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string FitmentTypeOther {
            get {
                return this.FitmentTypeOtherField;
            }
            set {
                if ((object.ReferenceEquals(this.FitmentTypeOtherField, value) != true)) {
                    this.FitmentTypeOtherField = value;
                    this.RaisePropertyChanged("FitmentTypeOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public int UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public System.DateTime CreateOn {
            get {
                return this.CreateOnField;
            }
            set {
                if ((this.CreateOnField.Equals(value) != true)) {
                    this.CreateOnField = value;
                    this.RaisePropertyChanged("CreateOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public System.DateTime UpdateOn {
            get {
                return this.UpdateOnField;
            }
            set {
                if ((this.UpdateOnField.Equals(value) != true)) {
                    this.UpdateOnField = value;
                    this.RaisePropertyChanged("UpdateOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public string YewuUserId {
            get {
                return this.YewuUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.YewuUserIdField, value) != true)) {
                    this.YewuUserIdField = value;
                    this.RaisePropertyChanged("YewuUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public int TenementType {
            get {
                return this.TenementTypeField;
            }
            set {
                if ((this.TenementTypeField.Equals(value) != true)) {
                    this.TenementTypeField = value;
                    this.RaisePropertyChanged("TenementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=25)]
        public string TenementName {
            get {
                return this.TenementNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TenementNameField, value) != true)) {
                    this.TenementNameField = value;
                    this.RaisePropertyChanged("TenementName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquiryModel", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class InquiryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double RefUnitPriceField;
        
        private int EstimatedPriceField;
        
        private int EstimatedPriceMinField;
        
        private int EstimatedPriceMaxField;
        
        private int AveragePriceThisMonthField;
        
        private int AveragePriceReferenceMonthField;
        
        private double RatioField;
        
        private int BasePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InquiryLogField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double RefUnitPrice {
            get {
                return this.RefUnitPriceField;
            }
            set {
                if ((this.RefUnitPriceField.Equals(value) != true)) {
                    this.RefUnitPriceField = value;
                    this.RaisePropertyChanged("RefUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int EstimatedPrice {
            get {
                return this.EstimatedPriceField;
            }
            set {
                if ((this.EstimatedPriceField.Equals(value) != true)) {
                    this.EstimatedPriceField = value;
                    this.RaisePropertyChanged("EstimatedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int EstimatedPriceMin {
            get {
                return this.EstimatedPriceMinField;
            }
            set {
                if ((this.EstimatedPriceMinField.Equals(value) != true)) {
                    this.EstimatedPriceMinField = value;
                    this.RaisePropertyChanged("EstimatedPriceMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int EstimatedPriceMax {
            get {
                return this.EstimatedPriceMaxField;
            }
            set {
                if ((this.EstimatedPriceMaxField.Equals(value) != true)) {
                    this.EstimatedPriceMaxField = value;
                    this.RaisePropertyChanged("EstimatedPriceMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int AveragePriceThisMonth {
            get {
                return this.AveragePriceThisMonthField;
            }
            set {
                if ((this.AveragePriceThisMonthField.Equals(value) != true)) {
                    this.AveragePriceThisMonthField = value;
                    this.RaisePropertyChanged("AveragePriceThisMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int AveragePriceReferenceMonth {
            get {
                return this.AveragePriceReferenceMonthField;
            }
            set {
                if ((this.AveragePriceReferenceMonthField.Equals(value) != true)) {
                    this.AveragePriceReferenceMonthField = value;
                    this.RaisePropertyChanged("AveragePriceReferenceMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public double Ratio {
            get {
                return this.RatioField;
            }
            set {
                if ((this.RatioField.Equals(value) != true)) {
                    this.RatioField = value;
                    this.RaisePropertyChanged("Ratio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int BasePrice {
            get {
                return this.BasePriceField;
            }
            set {
                if ((this.BasePriceField.Equals(value) != true)) {
                    this.BasePriceField = value;
                    this.RaisePropertyChanged("BasePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string InquiryLog {
            get {
                return this.InquiryLogField;
            }
            set {
                if ((object.ReferenceEquals(this.InquiryLogField, value) != true)) {
                    this.InquiryLogField = value;
                    this.RaisePropertyChanged("InquiryLog");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.InquiryServiceSoap")]
    public interface InquiryServiceSoap {
        
        // CODEGEN: Generating message contract since element name propertyInfo from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Inquiry", ReplyAction="*")]
        iKitchen.Web.ServiceReference1.InquiryResponse Inquiry(iKitchen.Web.ServiceReference1.InquiryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Inquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<iKitchen.Web.ServiceReference1.InquiryResponse> InquiryAsync(iKitchen.Web.ServiceReference1.InquiryRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InquiryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Inquiry", Namespace="http://tempuri.org/", Order=0)]
        public iKitchen.Web.ServiceReference1.InquiryRequestBody Body;
        
        public InquiryRequest() {
        }
        
        public InquiryRequest(iKitchen.Web.ServiceReference1.InquiryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InquiryRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public iKitchen.Web.ServiceReference1.PropertyInfo propertyInfo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int year;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int month;
        
        public InquiryRequestBody() {
        }
        
        public InquiryRequestBody(iKitchen.Web.ServiceReference1.PropertyInfo propertyInfo, int year, int month) {
            this.propertyInfo = propertyInfo;
            this.year = year;
            this.month = month;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InquiryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InquiryResponse", Namespace="http://tempuri.org/", Order=0)]
        public iKitchen.Web.ServiceReference1.InquiryResponseBody Body;
        
        public InquiryResponse() {
        }
        
        public InquiryResponse(iKitchen.Web.ServiceReference1.InquiryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InquiryResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public iKitchen.Web.ServiceReference1.InquiryModel InquiryResult;
        
        public InquiryResponseBody() {
        }
        
        public InquiryResponseBody(iKitchen.Web.ServiceReference1.InquiryModel InquiryResult) {
            this.InquiryResult = InquiryResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InquiryServiceSoapChannel : iKitchen.Web.ServiceReference1.InquiryServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InquiryServiceSoapClient : System.ServiceModel.ClientBase<iKitchen.Web.ServiceReference1.InquiryServiceSoap>, iKitchen.Web.ServiceReference1.InquiryServiceSoap {
        
        public InquiryServiceSoapClient() {
        }
        
        public InquiryServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InquiryServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InquiryServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InquiryServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        iKitchen.Web.ServiceReference1.InquiryResponse iKitchen.Web.ServiceReference1.InquiryServiceSoap.Inquiry(iKitchen.Web.ServiceReference1.InquiryRequest request) {
            return base.Channel.Inquiry(request);
        }
        
        public iKitchen.Web.ServiceReference1.InquiryModel Inquiry(iKitchen.Web.ServiceReference1.PropertyInfo propertyInfo, int year, int month) {
            iKitchen.Web.ServiceReference1.InquiryRequest inValue = new iKitchen.Web.ServiceReference1.InquiryRequest();
            inValue.Body = new iKitchen.Web.ServiceReference1.InquiryRequestBody();
            inValue.Body.propertyInfo = propertyInfo;
            inValue.Body.year = year;
            inValue.Body.month = month;
            iKitchen.Web.ServiceReference1.InquiryResponse retVal = ((iKitchen.Web.ServiceReference1.InquiryServiceSoap)(this)).Inquiry(inValue);
            return retVal.Body.InquiryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<iKitchen.Web.ServiceReference1.InquiryResponse> iKitchen.Web.ServiceReference1.InquiryServiceSoap.InquiryAsync(iKitchen.Web.ServiceReference1.InquiryRequest request) {
            return base.Channel.InquiryAsync(request);
        }
        
        public System.Threading.Tasks.Task<iKitchen.Web.ServiceReference1.InquiryResponse> InquiryAsync(iKitchen.Web.ServiceReference1.PropertyInfo propertyInfo, int year, int month) {
            iKitchen.Web.ServiceReference1.InquiryRequest inValue = new iKitchen.Web.ServiceReference1.InquiryRequest();
            inValue.Body = new iKitchen.Web.ServiceReference1.InquiryRequestBody();
            inValue.Body.propertyInfo = propertyInfo;
            inValue.Body.year = year;
            inValue.Body.month = month;
            return ((iKitchen.Web.ServiceReference1.InquiryServiceSoap)(this)).InquiryAsync(inValue);
        }
    }
}
